name: Build and Publish Docker Image and Helm Charts

on:
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Get release version
        id: get_version
        run: |
          # Remove 'v' prefix from tag name if present
          VERSION=${GITHUB_REF#refs/tags/v}
          VERSION=${VERSION#refs/tags/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Update Helm chart versions and image tag
        run: |
          # Get the version without 'v' prefix
          VERSION=${{ steps.get_version.outputs.version }}
          
          # Update controller chart version and app version
          yq -i '.version = env(VERSION)' ./cloud-firewall-controller/helm/controller/Chart.yaml
          yq -i '.appVersion = env(VERSION)' ./cloud-firewall-controller/helm/controller/Chart.yaml
          
          # Update CRD chart version
          yq -i '.version = env(VERSION)' ./cloud-firewall-controller/helm/crd/Chart.yaml
          
          # Update image tag in values.yaml if it exists
          if [ -f "./cloud-firewall-controller/helm/controller/values.yaml" ]; then
            yq -i '.controller.image.tag = env(VERSION)' ./cloud-firewall-controller/helm/controller/values.yaml
          fi

      - name: Package Helm chart
        run: |
          helm package ./cloud-firewall-controller/helm/*

      - name: Set up chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
